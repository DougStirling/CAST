startExercise("exerciseTestProg.BinomSimTestApplet", 600, 770);

addVariation("strawberryYoghurt", "It is thought that the proportion of customers buying yoghurt who choose strawberry flavour is#?:string[tail]( at least * equal to * no higher than * equal to * * )##pSuccess[index](0.6,0.5,0.4)#.\\nOut of #nTrials(20:30)# customers buying yoghurt, #nSuccess(:)# were observed to pick strawberry. Perform a test for whether its probability is #?:string[tail](less than*less than*more than*more than*different from*not equal to)# #pSuccess#.", "index(0:2)#tail[](0,1,2,3,4,4)#maxSliderN(40)#trialsName(customers)#successesName(strawberry choices)#successName(choosing strawberry)#minSimulations(50)#defaultSimulations(100)#conclusions(There_is_no_evidence_that_H%sub1%_is_true There_is_only_weak_evidence_that_H%sub1%_is_true There_is_moderately_strong_evidence_that_H%sub1%_is_true There_is_very_strong_evidence_that_H%sub1%_is_true It_is_almost_certain_that_H%sub1%_is_true)", null, 0);
addVariation("raspberryYoghurt", "It is thought that the proportion of customers buying yoghurt who choose raspberry flavour is#?:string[tail]( at least * equal to * no higher than * equal to * * )##pSuccess[index](0.6,0.5,0.4)#.\\nOut of #nTrials(20:30)# customers buying yoghurt, #nSuccess(:)# were observed to pick raspberry. Perform a test for whether its probability is #?:string[tail](less than*less than*more than*more than*different from*not equal to)# #pSuccess#.", "index(0:2)#tail[](0,1,2,3,4,4)#maxSliderN(40)#trialsName(customers)#successesName(raspberry choices)#successName(choosing raspberry)#minSimulations(50)#defaultSimulations(100)#conclusions(There_is_no_evidence_that_H%sub1%_is_true There_is_only_weak_evidence_that_H%sub1%_is_true There_is_moderately_strong_evidence_that_H%sub1%_is_true There_is_very_strong_evidence_that_H%sub1%_is_true It_is_almost_certain_that_H%sub1%_is_true)", null, 0);
addVariation("femaleLizards", "Researchers believe that the proportion of lizards of a particular species that are hatched female is#?:string[tail]( at least * equal to * no higher than * equal to * * )##pSuccess[index](0.6,0.5,0.4)#.\\n#nTrials(20:30)# lizards were observed hatching and #nSuccess(:)# of these were female. Perform a test for whether the probability of being female is #?:string[tail](less than*less than*more than*more than*different from*not equal to)# #pSuccess#.", "index(0:2)#tail[](0,1,2,3,4,4)#maxSliderN(40)#trialsName(lizards)#successesName(females)#successName(being female)#minSimulations(50)#defaultSimulations(100)#conclusions(There_is_no_evidence_that_H%sub1%_is_true There_is_only_weak_evidence_that_H%sub1%_is_true There_is_moderately_strong_evidence_that_H%sub1%_is_true There_is_very_strong_evidence_that_H%sub1%_is_true It_is_almost_certain_that_H%sub1%_is_true)", null, 0);
addVariation("maleLizards", "Researchers believe that the proportion of lizards of a particular species that are hatched male is#?:string[tail]( at least * equal to * no higher than * equal to * * )##pSuccess[index](0.6,0.5,0.4)#.\n#nTrials(20:30)# lizards were observed hatching and #nSuccess(:)# of these were male. Perform a test for whether the probability of being male is #?:string[tail](less than*less than*more than*more than*different from*not equal to)# #pSuccess#.", "index(0:2)#tail[](0,1,2,3,4,4)#maxSliderN(40)#trialsName(lizards)#successesName(males)#successName(being_male)#minSimulations(50)#defaultSimulations(100)#conclusions(There_is_no_evidence_that_H%sub1%_is_true There_is_only_weak_evidence_that_H%sub1%_is_true There_is_moderately_strong_evidence_that_H%sub1%_is_true There_is_very_strong_evidence_that_H%sub1%_is_true It_is_almost_certain_that_H%sub1%_is_true)", null, 0);
addVariation("drugRecovery", "A drug company claims that when patients with sore throats take a throat lozenge, the probability of recovery after 12 hours is#?:string[tail]( at least *equal to *??? *??? * * )##pSuccess[index](0.6,0.5,0.4)#.\\nIn an experiment with #nTrials(20:30)# patients, #nSuccess(:)# had recovered after 12 hours. Perform a test for whether the probability of recovery is #?:string[tail](less than*less than*???*???*different from*not equal to)# #pSuccess#.", "index(0:2)#tail[](0,1,4,4)#maxSliderN(40)#trialsName(patients)#successesName(recovered patients)#successName(recovery)#minSimulations(50)#defaultSimulations(100)#conclusions(There_is_no_evidence_that_H%sub1%_is_true There_is_only_weak_evidence_that_H%sub1%_is_true There_is_moderately_strong_evidence_that_H%sub1%_is_true There_is_very_strong_evidence_that_H%sub1%_is_true It_is_almost_certain_that_H%sub1%_is_true)", null, 0);
addVariation("drugFailure", "A drug company claims that when patients with sore throats take a throat lozenge, the probability of being still ill after 12 hours is#?:string[tail](??? *??? * no higher than * equal to * * )##pSuccess[index](0.6,0.5,0.4)#.\\nIn an experiment with #nTrials(20:30)# patients, #nSuccess(:)# were still ill after 12 hours. Perform a test for whether the probability of being still ill is #?:string[tail](???*???*more than*more than*different from*not equal to)# #pSuccess#.", "index(0:2)#tail[](2,3,4,4)#maxSliderN(40)#trialsName(patients)#successesName(patients still ill)#successName(being still ill)#minSimulations(50)#defaultSimulations(100)#conclusions(There_is_no_evidence_that_H%sub1%_is_true There_is_only_weak_evidence_that_H%sub1%_is_true There_is_moderately_strong_evidence_that_H%sub1%_is_true There_is_very_strong_evidence_that_H%sub1%_is_true It_is_almost_certain_that_H%sub1%_is_true)", null, 0);

//----------------------------------------------

startExercise("exerciseTestProg.NormSimTestApplet", 550, 770);

addVariation("milkVolume", "From previous records, it is known that the volume of milk in 2-litre containers has standard deviation #sigma# = #sd(0.020)# litres. If working to specifications, the filling machine should have a mean fill volume of#?:string[tail]( at least * equal to * no higher than * equal to * * )##nullMean[index](2.05,2.06,2.07,2.08,2.09,2.10)# litres.\\nIn a sample of size n = #sampleSize[](4,9,16,25)#, the sample mean was #observedMean(:)# litres. Perform a test for whether the population mean, #mu#, is now #?:string[tail](less than*less than*more than*more than*different from*not equal to)# #nullMean#.", "index(0:5)#tail[](0,1,2,3,4,4)#meanDecimals(3)#minSimulations(50)#defaultSimulations(100)#valueName(volume)#conclusions(There_is_no_evidence_that_H%sub1%_is_true There_is_only_weak_evidence_that_H%sub1%_is_true There_is_moderately_strong_evidence_that_H%sub1%_is_true There_is_very_strong_evidence_that_H%sub1%_is_true It_is_almost_certain_that_H%sub1%_is_true)", null, 0);
addVariation("waterDischarge", "An #?:string[tail](environmental group*environmental group*industrial concern*industrial concern*environmental group*industrial concern)# claims that #?:string[tail]( at least * equal to * no higher than * equal to * * )##nullMean[index](500,1000,1500,2000)# litres of wastewater per hour are discharged by a factory into a nearby lake.\\nIf it can be assumed that the standard deviation of the hourly discharge is #sigma# = #sd[index](150,200,250,400)# litres and a random sample of n = #sampleSize[](4,9,16,25)# hours gives a mean discharge of #observedMean(:)# litres per hour, perform a test for whether the population mean, #mu#, is now #?:string[tail](less than*less than*more than*more than*different from*not equal to)# #nullMean#.", "index(0:3)#tail[](0,1,2,3,4,4)#meanDecimals(0)#minSimulations(50)#defaultSimulations(100)#valueName(hourly discharge volume)#conclusions(There_is_no_evidence_that_H%sub1%_is_true There_is_only_weak_evidence_that_H%sub1%_is_true There_is_moderately_strong_evidence_that_H%sub1%_is_true There_is_very_strong_evidence_that_H%sub1%_is_true It_is_almost_certain_that_H%sub1%_is_true)", null, 0);
addVariation("serumCreatinine", "The mean and standard deviation of serum-creatinine in the general population are #mu# = #nullMean[index](0.9,1.0,1.1)# mg/dL and #sigma# = #sd[index](0.25,0.30,0.35)# mg/dL.\\nA group of n = #sampleSize[](4,9,16,25)# patients are given a new antibiotic and had a mean serum-creatinine level of #observedMean(:)# mg/dL. Test whether #mu# is now #?:string[tail](???*less than*???*more than*different from)# #nullMean# mg/dL.", "index(0:2)#tail[](1,3,4)#meanDecimals(3)#minSimulations(50)#defaultSimulations(100)#valueName(serum-creatinine level)#conclusions(There_is_no_evidence_that_H%sub1%_is_true There_is_only_weak_evidence_that_H%sub1%_is_true There_is_moderately_strong_evidence_that_H%sub1%_is_true There_is_very_strong_evidence_that_H%sub1%_is_true It_is_almost_certain_that_H%sub1%_is_true)", null, 0);

//----------------------------------------------

